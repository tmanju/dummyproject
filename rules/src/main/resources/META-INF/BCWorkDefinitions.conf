// We use MVEL to return a List of work definitions
// The properties of the work definitions are specified as a Map<String, Object>
// The allowed properties are name, parameters, displayName, icon and customEditor
// The returned result should thus be of type List<Map<String, Object>>
import org.drools.process.core.datatype.impl.type.StringDataType;
import org.drools.process.core.datatype.impl.type.ObjectDataType;
[
 // the abort tasks work item
  [
    "name" : "AbortTasks",
    "parameters" : [
      "taskIds" : new StringDataType(),
      "entityId" : new StringDataType(),
      "processInstanceId" : new StringDataType()
      
    ],
    "displayName" : "AbortTasks",
    "icon" : "icons/icon-close.gif"
  ],
  // the statusUpdate work item
  [
    "name" : "StatusUpdate",
    "parameters" : [
      "agendaGroup" : new StringDataType(),
      "nextStatusKey" : new StringDataType()
    ],
    "displayName" : "StatusUpdate",
    "icon" : "icons/icon-StatusUpdate.png"
  ],

  // the docGen work item
  [
    "name" : "DocGen",
    "parameters" : [
      "save" : new StringDataType()
    ],
    "displayName" : "DocGen",
    "icon" : "icons/document.png"
  ],

  // the LPUserTask work item
  [
    "name" : "LPUserTask",
    "parameters" : [
      "ActorId" : new StringDataType(),
      "Comment" : new StringDataType(),
      "Content" : new StringDataType(),
      "GroupId" : new StringDataType(),
      "Priority" : new StringDataType(),
      "Skippable" : new StringDataType(),
      "Swimlane" : new StringDataType(),
      "TaskName" : new StringDataType(),
      "Actions"  : new StringDataType(),
      "notify" : new StringDataType(),
      "To" : new StringDataType(),
      "From" : new StringDataType(),
      "Reply-To" : new StringDataType(),
      "Cc" : new StringDataType(),
      "Bcc" : new StringDataType(),
      "Subject" : new StringDataType(),
      "Body" : new StringDataType(), 
      "DueDateDelayTime" : new StringDataType(),
      "DueDate" : new StringDataType(),
      "EscalationTo": new StringDataType(),
      "EscalationGroupId": new StringDataType(),
      "EscalationActorId": new StringDataType()
    ],
    "displayName" : "LP User Task",
    "icon" : "icons/icon-LPUser-Task.png"
  ],

  // the Integration work item
  [
    "name" : "IntegrationTask",
    "parameters" : [
      "ServiceName" : new StringDataType()
    ],
    "displayName" : "Integration Task",
    "icon" : "icons/icon-intergrate-Task.png"
  ],

	[
	    "name" : "CustomUserTask",
	    "parameters" : [
	      "TaskConfigurationKey" : new StringDataType(),
	      "Actions"  : new StringDataType(),
	      "Skippable" : new StringDataType(),
	      "Swimlane" : new StringDataType()
	      
	    ],
	    "displayName" : "Custom User Task",
	    "icon" : "icons/icon-LPUser-Task.png"
  ],
  [
	    "name" : "CustomNotificationTask",
	    "parameters" : [
	      "NotificationConfigurationKey" : new StringDataType(),
	    ],
	    "displayName" : "Custom Notification Task",
   		"icon" : "icons/icon-notification.png"
  ],
  // the Notification work item
  [
    "name" : "NotificationTask",
    "parameters" : [
      "To" : new StringDataType(),
      "From" : new StringDataType(),
      "Reply-To" : new StringDataType(),
      "Cc" : new StringDataType(),
      "Bcc" : new StringDataType(),
      "Subject" : new StringDataType(),
      "Body" : new StringDataType()
    ],
    "displayName" : "Notification Task",
    "icon" : "icons/icon-notification.png"
  ],

  // the LoadEntity work item
  [
    "name" : "LoadEntity",
    "parameters" : [
      "Entity-Id" : new StringDataType(),
      "Entity-Type" : new StringDataType()
    ],
    "displayName" : "Load Entity",
    "icon" : "icons/icon-load.png"
  ],

  // the SaveEntity work item
  [
    "name" : "SaveEntity",
    "parameters" : [
      "Entity" : new StringDataType()
    ],
    "displayName" : "Save Entity",
    "icon" : "icons/icon-save.png"
  ],

  // the WaitState work item
  [
    "name" : "WaitState",
    "displayName" : "Wait State",
    "parameters" : [
      "Actions"  : new StringDataType(),
      "Resume" : new StringDataType()
    ],
    "icon" : "icons/icon-wait-state.png"
  ],
  
   // the Approver work item
  [
    "name" : "Approver",
    "parameters" : [
      "ActorId" : new StringDataType(),
      "Comment" : new StringDataType(),
      "Content" : new StringDataType(),
      "GroupId" : new StringDataType(),
      "Priority" : new StringDataType(),
      "Skippable" : new StringDataType(),
      "Swimlane" : new StringDataType(),
      "TaskName" : new StringDataType(),
      "Actions"  : new StringDataType(),
      "notify" : new StringDataType(),
      "To" : new StringDataType(),
      "From" : new StringDataType(),
      "Reply-To" : new StringDataType(),
      "Cc" : new StringDataType(),
      "Bcc" : new StringDataType(),
      "Subject" : new StringDataType(),
      "Body" : new StringDataType()
    ],
    "displayName" : "Approver",
    "icon" : "icons/icon--approve-entity.png"
  ],
  
  // Entity Validation group workitem
  [
    "name" : "ValidateEntity",
    "parameters" : [
      "validationGroups" : new StringDataType(),
      "throwException" :  new StringDataType()
    ],
    "displayName" : "ValidateEntity",
    "icon" : "icons/icon--validate-entity.png"
  ],
  // Timer WorkItem
  [
    "name" : "TimerTask",
    "parameters" : [
      "delay" : new StringDataType(),
      "timeOfDay" :  new StringDataType()
    ],
    "displayName" : "TimerTask",
    "icon" : "icons/icon--timer.png"
  ], 
  // BusinessOperation WorkItem
  [
    "name" : "BusinessOperationTask",
    "parameters" : [
      "businessOperationName" : new StringDataType(),
      "defered" : new StringDataType()
    ],
    "displayName" : "Business Operation Task",
    "icon" : "icons/icon-actions.gif"
  ], 
  // RuleService WorkItem
  [
    "name" : "RuleServiceTask",
    "parameters" : [
      "agendagroup-name" : new StringDataType()
    ],
    "displayName" : "Rule Service Task",
    "icon" : "icons/icon-actions.gif"
  ],
  // PdfMerge WorkItem
  [
    "name" : "PdfMerge",
    "parameters" : [
      "document" : new ObjectDataType(),
      "docTemplate" : new StringDataType(),
      "docClass" : new StringDataType(),
      "docCategory" : new StringDataType(),
      "docType" : new StringDataType()      
    ],
    "displayName" : "Pdf Merge",
    "icon" : "icons/icon-actions.gif"
  ]
  
  
]