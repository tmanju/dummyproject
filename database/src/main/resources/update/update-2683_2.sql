----------------------------------------------------------------------
-- LP_ATTACHMET
----------------------------------------------------------------------

UPDATE LP_ATTACHMENT_ SET ATTACHMENTURL_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_ATTACHMENT_ UPDATE_ATT set ATTACHMENTURL_LOB_ID = (
    select ATTACHMENTURL_LOB_ID from LP_ATTACHMENT_ NEW_ATT where NEW_ATT.LP_ATTACHMENT_ID = UPDATE_ATT.LP_ATTACHMENT_ID and NEW_ATT.REVTYPE = 0) 
    	where UPDATE_ATT.REVTYPE <> 0;
    	
UPDATE LP_ATTACHMENT ATT SET ATTACHMENTURL_LOB_ID = (SELECT ATTACHMENTURL_LOB_ID from LP_ATTACHMENT_ ATT_ where ATT_.LP_ATTACHMENT_ID = ATT.LP_ATTACHMENT_ID and ATT_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT ATTACHMENTURL_LOB_ID,  ATTACHMENTURL FROM LP_ATTACHMENT;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT ATTACHMENTURL_LOB_ID, REV, REVTYPE, ATTACHMENTURL FROM LP_ATTACHMENT_;

----------------------------------------------------------------------
-- LP_BUREAU_RPT
----------------------------------------------------------------------

UPDATE LP_BUREAU_RPT_ SET RESPONSE_PDF_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_BUREAU_RPT_ UPDATE_BR set RESPONSE_PDF_LOB_ID = (
    select RESPONSE_PDF_LOB_ID from LP_BUREAU_RPT_ NEW_BR where NEW_BR.LP_BUREAU_RPT_ID = UPDATE_BR.LP_BUREAU_RPT_ID and NEW_BR.REVTYPE = 0) 
    	where UPDATE_BR.REVTYPE <> 0;
    	
UPDATE LP_BUREAU_RPT BR SET RESPONSE_PDF_LOB_ID = (SELECT RESPONSE_PDF_LOB_ID from LP_BUREAU_RPT_ BR_ where BR_.LP_BUREAU_RPT_ID = BR.LP_BUREAU_RPT_ID and BR_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT RESPONSE_PDF_LOB_ID,  RESPONSE_PDF FROM LP_BUREAU_RPT;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT RESPONSE_PDF_LOB_ID, REV, REVTYPE, RESPONSE_PDF FROM LP_BUREAU_RPT_;

----------------------------------------------------------------------
-- LP_DOC.ARCHIVE_STREAM
----------------------------------------------------------------------

UPDATE LP_DOC_ SET ARCHIVE_STREAM_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_DOC_ UPDATE_DOC set ARCHIVE_STREAM_LOB_ID = (
    select ARCHIVE_STREAM_LOB_ID from LP_DOC_ NEW_DOC where NEW_DOC.LP_DOC_ID = UPDATE_DOC.LP_DOC_ID and NEW_DOC.REVTYPE = 0) 
    	where UPDATE_DOC.REVTYPE <> 0;
    	
UPDATE LP_DOC D SET ARCHIVE_STREAM_LOB_ID = (SELECT ARCHIVE_STREAM_LOB_ID from LP_DOC_ D_ where D_.LP_DOC_ID = D.LP_DOC_ID and D_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT ARCHIVE_STREAM_LOB_ID,  ARCHIVE_STREAM FROM LP_DOC;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT ARCHIVE_STREAM_LOB_ID, REV, REVTYPE, ARCHIVE_STREAM FROM LP_DOC_;

----------------------------------------------------------------------
-- LP_DOC.SIGNING_METADATA
----------------------------------------------------------------------

UPDATE LP_DOC_ SET SIGNING_METADATA_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_DOC_ UPDATE_DOC set SIGNING_METADATA_LOB_ID = (
    select SIGNING_METADATA_LOB_ID from LP_DOC_ NEW_DOC where NEW_DOC.LP_DOC_ID = UPDATE_DOC.LP_DOC_ID and NEW_DOC.REVTYPE = 0) 
    	where UPDATE_DOC.REVTYPE <> 0;
    	
UPDATE LP_DOC D SET SIGNING_METADATA_LOB_ID = (SELECT SIGNING_METADATA_LOB_ID from LP_DOC_ D_ where D_.LP_DOC_ID = D.LP_DOC_ID and D_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT SIGNING_METADATA_LOB_ID,  SIGNING_METADATA FROM LP_DOC;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT SIGNING_METADATA_LOB_ID, REV, REVTYPE, SIGNING_METADATA FROM LP_DOC_;

----------------------------------------------------------------------
-- LP_DOC.UPLOADED_STREAM
----------------------------------------------------------------------

UPDATE LP_DOC_ SET UPLOADED_STREAM_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_DOC_ UPDATE_DOC set UPLOADED_STREAM_LOB_ID = (
    select UPLOADED_STREAM_LOB_ID from LP_DOC_ NEW_DOC where NEW_DOC.LP_DOC_ID = UPDATE_DOC.LP_DOC_ID and NEW_DOC.REVTYPE = 0) 
    	where UPDATE_DOC.REVTYPE <> 0;
    	
UPDATE LP_DOC D SET UPLOADED_STREAM_LOB_ID = (SELECT UPLOADED_STREAM_LOB_ID from LP_DOC_ D_ where D_.LP_DOC_ID = D.LP_DOC_ID and D_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT UPLOADED_STREAM_LOB_ID,  UPLOADED_STREAM FROM LP_DOC;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT UPLOADED_STREAM_LOB_ID, REV, REVTYPE, UPLOADED_STREAM FROM LP_DOC_;

----------------------------------------------------------------------
-- LP_ICON_LIBRARY.ICON_FILE
----------------------------------------------------------------------

UPDATE LP_ICON_LIBRARY_ SET ICON_FILE_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_ICON_LIBRARY_ UPDATE_IL set ICON_FILE_LOB_ID = (
    select ICON_FILE_LOB_ID from LP_ICON_LIBRARY_ NEW_IL where NEW_IL.LP_ICON_LIBRARY_ID = UPDATE_IL.LP_ICON_LIBRARY_ID and NEW_IL.REVTYPE = 0) 
    	where UPDATE_IL.REVTYPE <> 0;
    	
UPDATE LP_ICON_LIBRARY IL SET ICON_FILE_LOB_ID = (SELECT ICON_FILE_LOB_ID from LP_ICON_LIBRARY_ IL_ where IL_.LP_ICON_LIBRARY_ID = IL.LP_ICON_LIBRARY_ID and IL_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT ICON_FILE_LOB_ID,  ICON_FILE FROM LP_ICON_LIBRARY;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT ICON_FILE_LOB_ID, REV, REVTYPE, ICON_FILE FROM LP_ICON_LIBRARY_;

----------------------------------------------------------------------
-- LP_INTEGRATION_TASK_LOG.XML_PAYLOAD
----------------------------------------------------------------------

UPDATE LP_INTEGRATION_TASK_LOG_ SET XML_PAYLOAD_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_INTEGRATION_TASK_LOG_ UPDATE_INTG_LOG set XML_PAYLOAD_LOB_ID = (
    select XML_PAYLOAD_LOB_ID from LP_INTEGRATION_TASK_LOG_ NEW_INTG_LOG where NEW_INTG_LOG.LP_INTEGRATION_TASK_LOG_ID = UPDATE_INTG_LOG.LP_INTEGRATION_TASK_LOG_ID and NEW_INTG_LOG.REVTYPE = 0) 
    	where UPDATE_INTG_LOG.REVTYPE <> 0;
    	
UPDATE LP_INTEGRATION_TASK_LOG INTG_LOG SET XML_PAYLOAD_LOB_ID = (SELECT XML_PAYLOAD_LOB_ID from LP_INTEGRATION_TASK_LOG_ INTG_LOG_ where INTG_LOG_.LP_INTEGRATION_TASK_LOG_ID = INTG_LOG.LP_INTEGRATION_TASK_LOG_ID and INTG_LOG_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT XML_PAYLOAD_LOB_ID,  XML_PAYLOAD FROM LP_INTEGRATION_TASK_LOG;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT XML_PAYLOAD_LOB_ID, REV, REVTYPE, XML_PAYLOAD FROM LP_INTEGRATION_TASK_LOG_;

----------------------------------------------------------------------
-- LP_MOODY_PARTY_FINC_INFO.FINC_SUM
----------------------------------------------------------------------

UPDATE LP_MOODY_PARTY_FINC_INFO_ SET FINC_SUM_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_MOODY_PARTY_FINC_INFO_ UPDATE_FINFO set FINC_SUM_LOB_ID = (
    select FINC_SUM_LOB_ID from LP_MOODY_PARTY_FINC_INFO_ NEW_FINFO where NEW_FINFO.LP_MOODY_PARTY_FINC_INFO_ID = UPDATE_FINFO.LP_MOODY_PARTY_FINC_INFO_ID and NEW_FINFO.REVTYPE = 0) 
    	where UPDATE_FINFO.REVTYPE <> 0;
    	
UPDATE LP_MOODY_PARTY_FINC_INFO FINFO SET FINC_SUM_LOB_ID = (SELECT FINC_SUM_LOB_ID from LP_MOODY_PARTY_FINC_INFO_ FINFO_ where FINFO_.LP_MOODY_PARTY_FINC_INFO_ID = FINFO.LP_MOODY_PARTY_FINC_INFO_ID and FINFO_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT FINC_SUM_LOB_ID,  FINC_SUM FROM LP_MOODY_PARTY_FINC_INFO;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT FINC_SUM_LOB_ID, REV, REVTYPE, FINC_SUM FROM LP_MOODY_PARTY_FINC_INFO_;

----------------------------------------------------------------------
-- LP_PAGE_AS_IMAG.IMAGE
----------------------------------------------------------------------

UPDATE LP_PAGE_AS_IMAGE_ SET IMAGE_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_PAGE_AS_IMAGE_ UPDATE_PIMG set IMAGE_LOB_ID = (
    select IMAGE_LOB_ID from LP_PAGE_AS_IMAGE_ NEW_PIMG where NEW_PIMG.LP_PAGE_AS_IMAGE_ID = UPDATE_PIMG.LP_PAGE_AS_IMAGE_ID and NEW_PIMG.REVTYPE = 0) 
    	where UPDATE_PIMG.REVTYPE <> 0;
    	
UPDATE LP_PAGE_AS_IMAGE PIMG SET IMAGE_LOB_ID = (SELECT IMAGE_LOB_ID from LP_PAGE_AS_IMAGE_ PIMG_ where PIMG_.LP_PAGE_AS_IMAGE_ID = PIMG.LP_PAGE_AS_IMAGE_ID and PIMG_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT IMAGE_LOB_ID,  IMAGE FROM LP_PAGE_AS_IMAGE;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT IMAGE_LOB_ID, REV, REVTYPE, IMAGE FROM LP_PAGE_AS_IMAGE_;

----------------------------------------------------------------------
-- LP_SCRCRD_DTL.AUDIT_RESP_XML
----------------------------------------------------------------------

UPDATE LP_SCRCRD_DTL_ SET AUDIT_RESP_XML_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_SCRCRD_DTL_ UPDATE_SCR set AUDIT_RESP_XML_LOB_ID = (
    select AUDIT_RESP_XML_LOB_ID from LP_SCRCRD_DTL_ NEW_SCR where NEW_SCR.LP_SCRCRD_DTL_ID = UPDATE_SCR.LP_SCRCRD_DTL_ID and NEW_SCR.REVTYPE = 0) 
    	where UPDATE_SCR.REVTYPE <> 0;
    	
UPDATE LP_SCRCRD_DTL SCR SET AUDIT_RESP_XML_LOB_ID = (SELECT AUDIT_RESP_XML_LOB_ID from LP_SCRCRD_DTL_ SCR_ where SCR_.LP_SCRCRD_DTL_ID = SCR.LP_SCRCRD_DTL_ID and SCR_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT AUDIT_RESP_XML_LOB_ID,  AUDIT_RESP_XML FROM LP_SCRCRD_DTL;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT AUDIT_RESP_XML_LOB_ID, REV, REVTYPE, AUDIT_RESP_XML FROM LP_SCRCRD_DTL_;

----------------------------------------------------------------------
-- LP_TEST_ENTITY.IMAGE
----------------------------------------------------------------------

UPDATE LP_TEST_ENTITY_ SET IMAGE_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_TEST_ENTITY_ UPDATE_TE set IMAGE_LOB_ID = (
    select IMAGE_LOB_ID from LP_TEST_ENTITY_ NEW_TE where NEW_TE.LP_TEST_ENTITY_ID = UPDATE_TE.LP_TEST_ENTITY_ID and NEW_TE.REVTYPE = 0) 
    	where UPDATE_TE.REVTYPE <> 0;
    	
UPDATE LP_TEST_ENTITY TE SET IMAGE_LOB_ID = (SELECT IMAGE_LOB_ID from LP_TEST_ENTITY_ TE_ where TE_.LP_TEST_ENTITY_ID = TE.LP_TEST_ENTITY_ID and TE_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT IMAGE_LOB_ID,  IMAGE FROM LP_TEST_ENTITY;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT IMAGE_LOB_ID, REV, REVTYPE, IMAGE FROM LP_TEST_ENTITY_;

----------------------------------------------------------------------
-- LP_UCC_ATTACHMENT.ATTACHMENT_BIN_VAL
----------------------------------------------------------------------

UPDATE LP_UCC_ATTACHMENT_ SET ATTACHMENT_VAL_LOB_ID = HIBERNATE_SEQUENCE.nextval where REVTYPE = 0;

UPDATE LP_UCC_ATTACHMENT_ UPDATE_ATT set ATTACHMENT_VAL_LOB_ID = (
    select ATTACHMENT_VAL_LOB_ID from LP_UCC_ATTACHMENT_ NEW_ATT where NEW_ATT.LP_UCC_ATTACHMENT_ID = UPDATE_ATT.LP_UCC_ATTACHMENT_ID and NEW_ATT.REVTYPE = 0) 
    	where UPDATE_ATT.REVTYPE <> 0;
    	
UPDATE LP_UCC_ATTACHMENT ATT SET ATTACHMENT_VAL_LOB_ID = (SELECT ATTACHMENT_VAL_LOB_ID from LP_UCC_ATTACHMENT_ ATT_ where ATT_.LP_UCC_ATTACHMENT_ID = ATT.LP_UCC_ATTACHMENT_ID and ATT_.REVTYPE = 0);    	

insert into CORE_LOB_CONTENT(CORE_LOB_CONTENT_ID,CONTENT) SELECT ATTACHMENT_VAL_LOB_ID,  ATTACHMENT_BIN_VAL FROM LP_UCC_ATTACHMENT;

insert into CORE_LOB_CONTENT_(CORE_LOB_CONTENT_ID, REV, REVTYPE, CONTENT) SELECT ATTACHMENT_VAL_LOB_ID, REV, REVTYPE, ATTACHMENT_BIN_VAL FROM LP_UCC_ATTACHMENT_;

----------------------------------------------------------------------
-- CORE_LOB_CONTENT.VERSION to default of 1
----------------------------------------------------------------------
update CORE_LOB_CONTENT set VERSION = 1;

